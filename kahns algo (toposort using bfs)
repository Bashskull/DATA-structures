class Solution {
  public:
    vector<int> topoSort(int V, vector<vector<int>>& edges) {
        vector<int> ans;
        vector<int> vis(V);
        vector<int> indegree(V);
        int n=edges.size();
        vector<vector<int>> adj(V);
        for (int i=0;i<n;i++){
            int u=edges[i][0];
            int v=edges[i][1];
            adj[u].push_back(v);
            indegree[v]++;
        }
        queue<int> Q;
        for(int i=0;i<V;i++){
            if (indegree[i]==0){
                Q.push(i);
            }
        }
        while (!Q.empty()){
            int node=Q.front();
            Q.pop();
            ans.push_back(node);
            for (auto it:adj[node]){
                if (!vis[it]){
                    indegree[it]--;
                    if(indegree[it]==0){
                        Q.push(it);
                    }
                }
            }
        }
        return ans;
        
    }
};
