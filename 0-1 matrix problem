class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        int n=mat.size();
        int m=mat[0].size();
        queue<pair<pair<int,int>,int>> Q;
        vector<vector<int>> vis(n,vector<int>(m));
        vector<vector<int>> ans(n,vector<int>(m));
        vector<int> delrow={1,0,-1,0};
        vector<int> delcol={0,1,0,-1};
        for (int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if (mat[i][j]==0){
                    vis[i][j]=1;
                    Q.push({{i,j},0});
                }
                else if (mat[i][j]==1){
                    vis[i][j]=0;
                }
            }
        }
        while(!Q.empty()){
            int row=Q.front().first.first;
            int col=Q.front().first.second;
            int dist=Q.front().second; 
            Q.pop();        
            ans[row][col]=dist;
            for (int i=0;i<4;i++){
                int nrow=row+delrow[i];
                int ncol=col+delcol[i];
                if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && (!vis[nrow][ncol]) ){
                    vis[nrow][ncol]=1;
                    Q.push({{nrow,ncol},dist+1});
                }   
            }   
        }
        return ans;
    }
};



