class Solution {
  public:
    // Function to find the shortest path from source to all other nodes
    vector<int> shortestPath(vector<vector<int>>& adj, int src) {
        // code here
        int n=adj.size();
        vector<int> dist(n,INT_MAX);
        dist[src]=0;
        queue<pair<int,int>> Q;
        Q.push({src,0});
        while(!Q.empty()){
            auto it=Q.front();
            int node=it.first;
            int dur=it.second;
            Q.pop();
            for(auto it2:adj[node]){
                if(dist[it2]>dur){
                    dist[it2]=dur+1;
                    Q.push({it2,dur+1});
                }
            }
        }
        for(int i=0;i<n;i++){
            if(dist[i]==INT_MAX){
                dist[i]=-1;
            }
        }
        return dist;
        
    }
};
